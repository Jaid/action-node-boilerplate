/*!
*** action-uptodater 2.5.1
*** Copyright Â© 2022, Jaid <jaid.jsx@gmail.com> (https://github.com/Jaid)
*** @license MIT
*** See https://github.com/Jaid/action-node-boilerplate
!*/
export const id=223;export const ids=[223];export const modules={1113:(e,t,s)=>{var n=s(202);e.exports=(n.default||n).template({compiler:[8,">= 4.3.0"],main:function(e,t,s,n,i){return'{\n  "testEnvironment": "node",\n  "maxWorkers": 1,\n  "runner": "jest-light-runner"\n}'},useData:!0})},3403:(e,t,s)=>{var n=s(202);e.exports=(n.default||n).template({compiler:[8,">= 4.3.0"],main:function(e,t,s,n,i){return'{\n  "testEnvironment": "node",\n  "maxWorkers": 1,\n  "coverageDirectory": "<rootDir>/dist/jest/coverage",\n  "collectCoverageFrom": [\n    "<rootDir>/dist/package/development/**",\n    "!<rootDir>/node_modules/"\n  ],\n  "coverageReporters": [\n    "text-summary",\n    "html"\n  ],\n  "testPathIgnorePatterns": [\n    "<rootDir>/node_modules/",\n    "<rootDir>/dist/"\n  ],\n  "modulePathIgnorePatterns": [\n    "<rootDir>/dist",\n    "<rootDir>/build"\n  ]\n}'},useData:!0})},4757:(e,t,s)=>{s.d(t,{a:()=>o});var n=s(8245),i=s(3079),a=s(8632),r=s(3885);const o=class{testers=[];id=null;title=null;passedTests=0;failedTests=0;consoleIcon=a.a.pass;pkg=null;incrementPassedTests(){this.passedTests++}incrementFailedTests(){this.consoleIcon=a.a.fail,this.failedTests++}getTitle(){return(0,r.a)(this.title)?this.title:this.id}isRelevantToRepo(){return!0}hasTesters(){return(0,r.a)(this.testers)}hasDependency(e,t){const s=t?i(t):["dependencies","devDependencies","optionalDependencies","peerDependencies","bundleDependencies","bundledDependencies"];if((0,r.b)(this.pkg))return!1;for(const t of s){var n;if(null!==(n=this.pkg[t])&&void 0!==n&&n[e])return!0}return!1}hasProductionDependency(e){return this.hasDependency(e,"dependencies")}hasDevelopmentDependency(e){return this.hasDependency(e,"devDependencies")}async fileExists(e){return await n.pathExists(e)}addTester(e){e.rule=this,this.testers.push(e)}}},8345:(e,t,s)=>{s.d(t,{a:()=>l});var n=s(6486),i=s(5089),a=s(4592),r=s(8632),o=s(3885);const l=class{title="Tester";passed=!1;rule=null;consoleIcon=r.a.fail;fixes=[];appliedFixes=[];logMessages=[];async test(){return!0}setTitle(e){this.ansiTitle=e,this.title=(0,i.a)(e)}setFunction(e){this.test=e}hasFix(){return(0,o.a)(this.fixes)}log(e){this.logMessages.push(e)}async run(e){const t=await this.test(e);if(!0!==t){if(this.log((0,n.isString)(t)?t:"Failed"),e.shouldFix&&((0,n.isFunction)(this.collectFixes)&&this.collectFixes(),(0,o.a)(this.fixes))){for(const e of this.fixes)await e.apply(),this.appliedFixes.push(e);const t=await this.test(e);if(!0===t)return this.log("Fixed successfully"),this.consoleIcon=r.a.fix,this.rule.incrementPassedTests(),!0;this.consoleIcon=r.a.fixFailed,this.log("Tried to apply a fix, but the test still failed on second run"),(0,n.isString)(t)&&this.log(t)}return this.rule.incrementFailedTests(),!1}return this.passed=!0,this.consoleIcon=r.a.pass,this.rule.incrementPassedTests(),this.log("Passed! <3"),!0}addFix(e,t){const s=new a.a(e,t);s.tester=this,this.fixes.push(s)}}},8632:(e,t,s)=>{s.d(t,{a:()=>a});var n=s(5264),i=s(9486);const a={pass:i.a.green(n.a.tick),fail:i.a.red(n.a.cross),fix:"ðŸ”§",fixFailed:"ðŸ’£"}},223:(e,t,s)=>{s.r(t),s.d(t,{default:()=>o});var n=s(4757),i=s(8410),a=s(3403),r=s(1113);const o=new class extends n.a{title="Node library";async isRelevantToRepo(){return this.hasDevelopmentDependency("jest")}init(){this.hasDevelopmentDependency("jest-light-runner")?this.addTester(new i.a("jest.config.json",r())):this.addTester(new i.a("jest.config.json",a()))}}},8410:(e,t,s)=>{s.d(t,{a:()=>d});var n=s(6005),i=s(9411),a=(s(8245),s(9486));const r=s(7088).default,o=e=>n.createHash("md5").update(e).digest("hex");var l=s(8345);const d=class extends l.a{expectedHash=null;file=null;constructor(e,t){super(),this.expectedContent=t,this.expectedHash=o(t),this.file=i.resolve(e),this.shortFile=e,this.setTitle(`${a.a.yellow(this.shortFile)} should have md5 ${a.a.blue(this.expectedHash)}`)}async test(){const e=await r(this.file);if(!e)return`${this.shortFile} does not exist`;const t=o(e);return!(t!==this.expectedHash)||`They are not equal, got hash ${t} from file`}collectFixes(){this.addFix(this.shortFile,this.expectedContent)}}}};
//# sourceMappingURL=223.js.map